/*
 * Copyright 2017 Sai Pullabhotla.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.jmethods.catatumbo.stats;

import com.jmethods.catatumbo.Identifier;
import com.jmethods.catatumbo.MappedSuperClass;
import com.jmethods.catatumbo.Property;
import java.io.Serializable;

/**
 * Base class for Kind Stats (overall as well as namespace specific).
 *
 * @author Sai Pullabhotla
 */
@MappedSuperClass
public abstract class StatKindBase extends StatBase implements Serializable {

  /** Serial version UID */
  private static final long serialVersionUID = 2440661058294008910L;

  /** Entity ID (same as Kind name). */
  @Identifier(autoGenerated = false)
  private String id;

  /** Kind name */
  @Property(name = StatConstants.PROP_KIND_NAME)
  private String kindName;

  /** Size of built-in indexes */
  @Property(name = StatConstants.PROP_BUILTIN_INDEX_BYTES)
  private long builtinIndexBytes;

  /** Number of built-in indexes */
  @Property(name = StatConstants.PROP_BUILTIN_INDEX_COUNT)
  private long builtinIndexCount;

  /** Size of composite indexes */
  @Property(name = StatConstants.PROP_COMPOSITE_INDEX_BYTES)
  private long compositeIndexBytes;

  /** Number of composite indexes */
  @Property(name = StatConstants.PROP_COMPOSITE_INDEX_COUNT)
  private long compositeIndexCount;

  /** Size of entities */
  @Property(name = StatConstants.PROP_ENTITY_BYTES)
  private long entityBytes;

  /**
   * Returns the ID of this Statistic entity.
   *
   * @return the ID of this Statistic entity.
   */
  public String getId() {
    return id;
  }

  /**
   * Sets the ID of this Statistic entity.
   *
   * @param id the ID of this Statistic entity.
   */
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Returns the Kind to which this statistic belongs to.
   *
   * @return the Kind to which this statistic belongs to.
   */
  public String getKindName() {
    return kindName;
  }

  /**
   * Sets the Kind to which this statistic belongs to.
   *
   * @param kindName the Kind to which this statistic belongs to.
   */
  public void setKindName(String kindName) {
    this.kindName = kindName;
  }

  /**
   * Returns the size of built-in indexes, in bytes.
   *
   * @return the size of built-in indexes, in bytes.
   */
  public long getBuiltinIndexBytes() {
    return builtinIndexBytes;
  }

  /**
   * Sets the size of built-in indexes, in bytes.
   *
   * @param builtinIndexBytes the size of built-in indexes, in bytes.
   */
  public void setBuiltinIndexBytes(long builtinIndexBytes) {
    this.builtinIndexBytes = builtinIndexBytes;
  }

  /**
   * Returns the number of built-in indexes.
   *
   * @return the number of built-in indexes.
   */
  public long getBuiltinIndexCount() {
    return builtinIndexCount;
  }

  /**
   * Sets the number of built-in indexes.
   *
   * @param builtinIndexCount the number of built-in indexes.
   */
  public void setBuiltinIndexCount(long builtinIndexCount) {
    this.builtinIndexCount = builtinIndexCount;
  }

  /**
   * Returns the size of composite indexes, in bytes.
   *
   * @return the size of composite indexes, in bytes.
   */
  public long getCompositeIndexBytes() {
    return compositeIndexBytes;
  }

  /**
   * Sets the size of composite indexes, in bytes.
   *
   * @param compositeIndexBytes the size of composite indexes, in bytes.
   */
  public void setCompositeIndexBytes(long compositeIndexBytes) {
    this.compositeIndexBytes = compositeIndexBytes;
  }

  /**
   * Returns the number of composite indexes.
   *
   * @return the number of composite indexes.
   */
  public long getCompositeIndexCount() {
    return compositeIndexCount;
  }

  /**
   * Sets the number of composite indexes.
   *
   * @param compositeIndexCount the number of composite indexes.
   */
  public void setCompositeIndexCount(long compositeIndexCount) {
    this.compositeIndexCount = compositeIndexCount;
  }

  /**
   * Returns the size of entities, in bytes.
   *
   * @return the size of entities, in bytes.
   */
  public long getEntityBytes() {
    return entityBytes;
  }

  /**
   * Sets the size of entities, in bytes.
   *
   * @param entityBytes the size of entities, in bytes.
   */
  public void setEntityBytes(long entityBytes) {
    this.entityBytes = entityBytes;
  }
}
